{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0x5719cB0EA7043B2826d28400BB43599E3fC1CCB4",
    "txHash": "0xd9edd5d7e0bdad3ba4c12d25205d46ee733d2a51816dae612932f7c7f58fc7bc",
    "deployTransaction": {
      "hash": "0xd9edd5d7e0bdad3ba4c12d25205d46ee733d2a51816dae612932f7c7f58fc7bc",
      "type": 0,
      "accessList": null,
      "blockHash": null,
      "blockNumber": null,
      "transactionIndex": null,
      "confirmations": 0,
      "from": "0xdFFb855c28d7Fd40f641C5E1035e5b819590cc25",
      "gasPrice": {
        "type": "BigNumber",
        "hex": "0x59682f00"
      },
      "gasLimit": {
        "type": "BigNumber",
        "hex": "0x0762b4"
      },
      "to": null,
      "value": {
        "type": "BigNumber",
        "hex": "0x00"
      },
      "nonce": 47,
      "data": "0x608060405234801561001057600080fd5b50600080546001600160a01b031916339081178255604051909182917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350610759806100616000396000f3fe60806040526004361061007b5760003560e01c80639623609d1161004e5780639623609d1461011157806399a88ec414610124578063f2fde38b14610144578063f3b7dead146101645761007b565b8063204e1c7a14610080578063715018a6146100bc5780637eff275e146100d35780638da5cb5b146100f3575b600080fd5b34801561008c57600080fd5b506100a061009b366004610515565b610184565b6040516001600160a01b03909116815260200160405180910390f35b3480156100c857600080fd5b506100d1610215565b005b3480156100df57600080fd5b506100d16100ee366004610554565b610292565b3480156100ff57600080fd5b506000546001600160a01b03166100a0565b6100d161011f36600461058c565b61031c565b34801561013057600080fd5b506100d161013f366004610554565b6103ad565b34801561015057600080fd5b506100d161015f366004610515565b610405565b34801561017057600080fd5b506100a061017f366004610515565b6104ef565b6000806000836001600160a01b03166040516101aa90635c60da1b60e01b815260040190565b600060405180830381855afa9150503d80600081146101e5576040519150601f19603f3d011682016040523d82523d6000602084013e6101ea565b606091505b5091509150816101f957600080fd5b8080602001905181019061020d9190610538565b949350505050565b6000546001600160a01b031633146102485760405162461bcd60e51b815260040161023f906106c0565b60405180910390fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b031633146102bc5760405162461bcd60e51b815260040161023f906106c0565b6040516308f2839760e41b81526001600160a01b038281166004830152831690638f283970906024015b600060405180830381600087803b15801561030057600080fd5b505af1158015610314573d6000803e3d6000fd5b505050505050565b6000546001600160a01b031633146103465760405162461bcd60e51b815260040161023f906106c0565b60405163278f794360e11b81526001600160a01b03841690634f1ef286903490610376908690869060040161065d565b6000604051808303818588803b15801561038f57600080fd5b505af11580156103a3573d6000803e3d6000fd5b5050505050505050565b6000546001600160a01b031633146103d75760405162461bcd60e51b815260040161023f906106c0565b604051631b2ce7f360e11b81526001600160a01b038281166004830152831690633659cfe6906024016102e6565b6000546001600160a01b0316331461042f5760405162461bcd60e51b815260040161023f906106c0565b6001600160a01b0381166104945760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161023f565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b6000806000836001600160a01b03166040516101aa906303e1469160e61b815260040190565b600060208284031215610526578081fd5b81356105318161070b565b9392505050565b600060208284031215610549578081fd5b81516105318161070b565b60008060408385031215610566578081fd5b82356105718161070b565b915060208301356105818161070b565b809150509250929050565b6000806000606084860312156105a0578081fd5b83356105ab8161070b565b925060208401356105bb8161070b565b9150604084013567ffffffffffffffff808211156105d7578283fd5b818601915086601f8301126105ea578283fd5b8135818111156105fc576105fc6106f5565b604051601f8201601f19908116603f01168101908382118183101715610624576106246106f5565b8160405282815289602084870101111561063c578586fd5b82602086016020830137856020848301015280955050505050509250925092565b600060018060a01b038416825260206040818401528351806040850152825b818110156106985785810183015185820160600152820161067c565b818111156106a95783606083870101525b50601f01601f191692909201606001949350505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b634e487b7160e01b600052604160045260246000fd5b6001600160a01b038116811461072057600080fd5b5056fea2646970667358221220d849f96f3086b9f82cdcf665adb8c697ace05638da1c7c16ab2d26293717af6764736f6c63430008020033",
      "r": "0x8fc196283c8cce69d606677fdecb06d935c0f2a5a1629171185b228e8fd18354",
      "s": "0x3244823ebc796f476585a2b4eaf93769b255b9073af455130f80741a819c8c78",
      "v": 41,
      "creates": "0x5719cB0EA7043B2826d28400BB43599E3fC1CCB4",
      "chainId": 3
    }
  },
  "proxies": [
    {
      "address": "0x56E89073A46b3Eb5E26F2E5b1a52e48ECd327d03",
      "txHash": "0x09b1d88a4fcf481843cf5090bfd8e0443260604eac8ca8cf614ad333848ac4c8",
      "kind": "transparent"
    },
    {
      "address": "0x79c7b29a767291ADFe477CeBf5484167776F0A83",
      "txHash": "0x85b4045fef94a8d412267bb03a5964e0d00a00fc1d28203e32b14a64f26eea43",
      "kind": "transparent"
    },
    {
      "address": "0xC34e0e739Dd0d86CDecaB6e205748d0070C6d6c5",
      "txHash": "0x9d1045ed77b0bcb52e8c148882d352351154579de9350f8dad35e1b2157c1fb5",
      "kind": "transparent"
    },
    {
      "address": "0x7448bD1EA749D4E6f32Ce363608FE9A72cdFf1C8",
      "txHash": "0x9172ad3a411522d9a073d3a30013e418e747947724b0a7024273d2b607c2ab4c",
      "kind": "transparent"
    },
    {
      "address": "0x5bD2778b3652d015f70167B7a0ec1E4A7A136ef6",
      "txHash": "0xd1bdb6d763df036ee9a7584eb3f0d11035fc24b175c54987e4538851b0dce839",
      "kind": "transparent"
    },
    {
      "address": "0xb6bD9c6B0A084baB528dE1cd7Ac821c14f7a7BB3",
      "txHash": "0x8842ca09a4f36b336fbb5515654b7e22aab1d317f22e249616bdd92989154e30",
      "kind": "transparent"
    },
    {
      "address": "0x57477606FFC366730D7d5989A9Ae74aA3a7E2e3d",
      "txHash": "0x0733a74454a5b477d53d9bca4e6129e0bdd5550066134df71eb80f97dd15eb26",
      "kind": "transparent"
    },
    {
      "address": "0xE6916C28ABe81a819aD6A58c349897f1e177CF17",
      "txHash": "0x6985c873d517e286a977554c19f89a7948e038bcce7c65f86a9ca9ab573be004",
      "kind": "transparent"
    },
    {
      "address": "0x8702928C46f014057773aa0939F0D8d47C2C0cDD",
      "txHash": "0xac50e4b77219f9983761b1bb3e8933111fedc6efcc53e8f8bc866a4048cad4f9",
      "kind": "transparent"
    },
    {
      "address": "0x42907dff9Df62F0D32B3cFb1C76bb98A4cEa8d6a",
      "txHash": "0xdff7603fbdcdba4a755ea75f8cd9f6e09c0a4cd5219b9e5690d65f9bd7a9bc94",
      "kind": "transparent"
    }
  ],
  "impls": {
    "51000972e9dbb5b703887411b5f8c773d2833632830e2f72ee2bd9b82dc59236": {
      "address": "0x4711Ed70d3Aa5374A0Ab542e1e2faB858CB35579",
      "txHash": "0xee95c434ad96903a9325efcf13d3b936b77cde02091c3b2f6163b111c834948c",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)39_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "AccessManager",
            "label": "multiSignWallet",
            "type": "t_address",
            "src": "contracts/access/AccessManager.sol:28"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)39_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)39_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)2855_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)2855_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)2590_storage"
              }
            ]
          },
          "t_struct(Set)2590_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "2021d1adc2e430e8eee5146453e90aa13906676ffda19acdd5ef0ba952b95e40": {
      "address": "0x9c62F62209546FeE5723331F0a80d1F6216e659b",
      "txHash": "0xfb3eba318362e7cecdb039f15eb888da8587ad1eb19dc5ba84978910954738ac",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "contract": "ClientManager",
            "label": "nativeChainName",
            "type": "t_string_storage",
            "src": "contracts/core/02-client/ClientManager.sol:13"
          },
          {
            "contract": "ClientManager",
            "label": "clients",
            "type": "t_mapping(t_string_memory_ptr,t_contract(IClient)6505)",
            "src": "contracts/core/02-client/ClientManager.sol:15"
          },
          {
            "contract": "ClientManager",
            "label": "relayers",
            "type": "t_mapping(t_string_memory_ptr,t_mapping(t_address,t_bool))",
            "src": "contracts/core/02-client/ClientManager.sol:17"
          },
          {
            "contract": "ClientManager",
            "label": "accessManager",
            "type": "t_contract(IAccessManager)6416",
            "src": "contracts/core/02-client/ClientManager.sol:19"
          }
        ],
        "types": {
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_string_memory_ptr,t_contract(IClient)6505)": {
            "label": "mapping(string => contract IClient)"
          },
          "t_contract(IClient)6505": {
            "label": "contract IClient"
          },
          "t_mapping(t_string_memory_ptr,t_mapping(t_address,t_bool))": {
            "label": "mapping(string => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_contract(IAccessManager)6416": {
            "label": "contract IAccessManager"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "501c86a5edf5ce41fa7d054f831a9c71f3c26dc2e60d4e1528a9ca13510e7ebe": {
      "address": "0x6cDF355ce31a1aaFD9041B25d896C9b7A41aE996",
      "txHash": "0x1b6f203403980bde2a5f45cab3855b80f2a67850f6901afdbbda87c042505dc2",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "contract": "Tendermint",
            "label": "clientState",
            "type": "t_struct(Data)39779_storage",
            "src": "contracts/light-clients/07-tendermint/Tendermint.sol:26"
          },
          {
            "contract": "Tendermint",
            "label": "consensusStates",
            "type": "t_mapping(t_uint128,t_struct(Data)41893_storage)",
            "src": "contracts/light-clients/07-tendermint/Tendermint.sol:28"
          },
          {
            "contract": "Tendermint",
            "label": "processedTime",
            "type": "t_mapping(t_uint128,t_uint256)",
            "src": "contracts/light-clients/07-tendermint/Tendermint.sol:30"
          },
          {
            "contract": "Tendermint",
            "label": "clientManager",
            "type": "t_address",
            "src": "contracts/light-clients/07-tendermint/Tendermint.sol:32"
          }
        ],
        "types": {
          "t_struct(Data)39779_storage": {
            "label": "struct ClientState.Data",
            "members": [
              {
                "label": "chain_id",
                "type": "t_string_storage"
              },
              {
                "label": "trust_level",
                "type": "t_struct(Data)43739_storage"
              },
              {
                "label": "trusting_period",
                "type": "t_int64"
              },
              {
                "label": "unbonding_period",
                "type": "t_int64"
              },
              {
                "label": "max_clock_drift",
                "type": "t_int64"
              },
              {
                "label": "latest_height",
                "type": "t_struct(Data)56593_storage"
              },
              {
                "label": "proof_specs",
                "type": "t_array(t_struct(Data)23478_storage)dyn_storage"
              },
              {
                "label": "merkle_prefix",
                "type": "t_struct(Data)14153_storage"
              },
              {
                "label": "time_delay",
                "type": "t_uint64"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_struct(Data)43739_storage": {
            "label": "struct Fraction.Data",
            "members": [
              {
                "label": "numerator",
                "type": "t_uint64"
              },
              {
                "label": "denominator",
                "type": "t_uint64"
              }
            ]
          },
          "t_int64": {
            "label": "int64"
          },
          "t_struct(Data)56593_storage": {
            "label": "struct Height.Data",
            "members": [
              {
                "label": "revision_number",
                "type": "t_uint64"
              },
              {
                "label": "revision_height",
                "type": "t_uint64"
              }
            ]
          },
          "t_array(t_struct(Data)23478_storage)dyn_storage": {
            "label": "struct ProofSpec.Data[]"
          },
          "t_struct(Data)23478_storage": {
            "label": "struct ProofSpec.Data",
            "members": [
              {
                "label": "leaf_spec",
                "type": "t_struct(Data)21528_storage"
              },
              {
                "label": "inner_spec",
                "type": "t_struct(Data)24472_storage"
              },
              {
                "label": "max_depth",
                "type": "t_int32"
              },
              {
                "label": "min_depth",
                "type": "t_int32"
              }
            ]
          },
          "t_struct(Data)14153_storage": {
            "label": "struct MerklePrefix.Data",
            "members": [
              {
                "label": "key_prefix",
                "type": "t_bytes_storage"
              }
            ]
          },
          "t_uint64": {
            "label": "uint64"
          },
          "t_struct(Data)21528_storage": {
            "label": "struct LeafOp.Data",
            "members": [
              {
                "label": "hash",
                "type": "t_enum(HashOp)31558"
              },
              {
                "label": "prehash_key",
                "type": "t_enum(HashOp)31558"
              },
              {
                "label": "prehash_value",
                "type": "t_enum(HashOp)31558"
              },
              {
                "label": "length",
                "type": "t_enum(LengthOp)31686"
              },
              {
                "label": "prefix",
                "type": "t_bytes_storage"
              }
            ]
          },
          "t_struct(Data)24472_storage": {
            "label": "struct InnerSpec.Data",
            "members": [
              {
                "label": "child_order",
                "type": "t_array(t_int32)dyn_storage"
              },
              {
                "label": "child_size",
                "type": "t_int32"
              },
              {
                "label": "min_prefix_length",
                "type": "t_int32"
              },
              {
                "label": "max_prefix_length",
                "type": "t_int32"
              },
              {
                "label": "empty_child",
                "type": "t_bytes_storage"
              },
              {
                "label": "hash",
                "type": "t_enum(HashOp)31558"
              }
            ]
          },
          "t_int32": {
            "label": "int32"
          },
          "t_bytes_storage": {
            "label": "bytes"
          },
          "t_enum(HashOp)31558": {
            "label": "enum PROOFS_PROTO_GLOBAL_ENUMS.HashOp",
            "members": [
              "NO_HASH",
              "SHA256",
              "SHA512",
              "KECCAK",
              "RIPEMD160",
              "BITCOIN"
            ]
          },
          "t_enum(LengthOp)31686": {
            "label": "enum PROOFS_PROTO_GLOBAL_ENUMS.LengthOp",
            "members": [
              "NO_PREFIX",
              "VAR_PROTO",
              "VAR_RLP",
              "FIXED32_BIG",
              "FIXED32_LITTLE",
              "FIXED64_BIG",
              "FIXED64_LITTLE",
              "REQUIRE_32_BYTES",
              "REQUIRE_64_BYTES"
            ]
          },
          "t_array(t_int32)dyn_storage": {
            "label": "int32[]"
          },
          "t_mapping(t_uint128,t_struct(Data)41893_storage)": {
            "label": "mapping(uint128 => struct ConsensusState.Data)"
          },
          "t_uint128": {
            "label": "uint128"
          },
          "t_struct(Data)41893_storage": {
            "label": "struct ConsensusState.Data",
            "members": [
              {
                "label": "timestamp",
                "type": "t_struct(Data)45748_storage"
              },
              {
                "label": "root",
                "type": "t_bytes_storage"
              },
              {
                "label": "next_validators_hash",
                "type": "t_bytes_storage"
              }
            ]
          },
          "t_struct(Data)45748_storage": {
            "label": "struct Timestamp.Data",
            "members": [
              {
                "label": "secs",
                "type": "t_int64"
              },
              {
                "label": "nanos",
                "type": "t_int64"
              }
            ]
          },
          "t_mapping(t_uint128,t_uint256)": {
            "label": "mapping(uint128 => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "3b2d040a047633e72983b5437f38a9c0e1e8e318d844e9a03f09ab776cb4562f": {
      "address": "0xCd1c544352De73b552eC4b97B3c45A246aF2524A",
      "txHash": "0xace73fa3df44af25e8c96aabad7fe44910345c36456f7acfa932f131b476a7e8",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "contract": "Tendermint",
            "label": "clientState",
            "type": "t_struct(Data)39779_storage",
            "src": "contracts/light-clients/07-tendermint/Tendermint.sol:26"
          },
          {
            "contract": "Tendermint",
            "label": "consensusStates",
            "type": "t_mapping(t_uint128,t_struct(Data)41893_storage)",
            "src": "contracts/light-clients/07-tendermint/Tendermint.sol:28"
          },
          {
            "contract": "Tendermint",
            "label": "processedTime",
            "type": "t_mapping(t_uint128,t_uint256)",
            "src": "contracts/light-clients/07-tendermint/Tendermint.sol:30"
          },
          {
            "contract": "Tendermint",
            "label": "clientManager",
            "type": "t_address",
            "src": "contracts/light-clients/07-tendermint/Tendermint.sol:32"
          }
        ],
        "types": {
          "t_struct(Data)39779_storage": {
            "label": "struct ClientState.Data",
            "members": [
              {
                "label": "chain_id",
                "type": "t_string_storage"
              },
              {
                "label": "trust_level",
                "type": "t_struct(Data)43739_storage"
              },
              {
                "label": "trusting_period",
                "type": "t_int64"
              },
              {
                "label": "unbonding_period",
                "type": "t_int64"
              },
              {
                "label": "max_clock_drift",
                "type": "t_int64"
              },
              {
                "label": "latest_height",
                "type": "t_struct(Data)56593_storage"
              },
              {
                "label": "proof_specs",
                "type": "t_array(t_struct(Data)23478_storage)dyn_storage"
              },
              {
                "label": "merkle_prefix",
                "type": "t_struct(Data)14153_storage"
              },
              {
                "label": "time_delay",
                "type": "t_uint64"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_struct(Data)43739_storage": {
            "label": "struct Fraction.Data",
            "members": [
              {
                "label": "numerator",
                "type": "t_uint64"
              },
              {
                "label": "denominator",
                "type": "t_uint64"
              }
            ]
          },
          "t_int64": {
            "label": "int64"
          },
          "t_struct(Data)56593_storage": {
            "label": "struct Height.Data",
            "members": [
              {
                "label": "revision_number",
                "type": "t_uint64"
              },
              {
                "label": "revision_height",
                "type": "t_uint64"
              }
            ]
          },
          "t_array(t_struct(Data)23478_storage)dyn_storage": {
            "label": "struct ProofSpec.Data[]"
          },
          "t_struct(Data)23478_storage": {
            "label": "struct ProofSpec.Data",
            "members": [
              {
                "label": "leaf_spec",
                "type": "t_struct(Data)21528_storage"
              },
              {
                "label": "inner_spec",
                "type": "t_struct(Data)24472_storage"
              },
              {
                "label": "max_depth",
                "type": "t_int32"
              },
              {
                "label": "min_depth",
                "type": "t_int32"
              }
            ]
          },
          "t_struct(Data)14153_storage": {
            "label": "struct MerklePrefix.Data",
            "members": [
              {
                "label": "key_prefix",
                "type": "t_bytes_storage"
              }
            ]
          },
          "t_uint64": {
            "label": "uint64"
          },
          "t_struct(Data)21528_storage": {
            "label": "struct LeafOp.Data",
            "members": [
              {
                "label": "hash",
                "type": "t_enum(HashOp)31558"
              },
              {
                "label": "prehash_key",
                "type": "t_enum(HashOp)31558"
              },
              {
                "label": "prehash_value",
                "type": "t_enum(HashOp)31558"
              },
              {
                "label": "length",
                "type": "t_enum(LengthOp)31686"
              },
              {
                "label": "prefix",
                "type": "t_bytes_storage"
              }
            ]
          },
          "t_struct(Data)24472_storage": {
            "label": "struct InnerSpec.Data",
            "members": [
              {
                "label": "child_order",
                "type": "t_array(t_int32)dyn_storage"
              },
              {
                "label": "child_size",
                "type": "t_int32"
              },
              {
                "label": "min_prefix_length",
                "type": "t_int32"
              },
              {
                "label": "max_prefix_length",
                "type": "t_int32"
              },
              {
                "label": "empty_child",
                "type": "t_bytes_storage"
              },
              {
                "label": "hash",
                "type": "t_enum(HashOp)31558"
              }
            ]
          },
          "t_int32": {
            "label": "int32"
          },
          "t_bytes_storage": {
            "label": "bytes"
          },
          "t_enum(HashOp)31558": {
            "label": "enum PROOFS_PROTO_GLOBAL_ENUMS.HashOp",
            "members": [
              "NO_HASH",
              "SHA256",
              "SHA512",
              "KECCAK",
              "RIPEMD160",
              "BITCOIN"
            ]
          },
          "t_enum(LengthOp)31686": {
            "label": "enum PROOFS_PROTO_GLOBAL_ENUMS.LengthOp",
            "members": [
              "NO_PREFIX",
              "VAR_PROTO",
              "VAR_RLP",
              "FIXED32_BIG",
              "FIXED32_LITTLE",
              "FIXED64_BIG",
              "FIXED64_LITTLE",
              "REQUIRE_32_BYTES",
              "REQUIRE_64_BYTES"
            ]
          },
          "t_array(t_int32)dyn_storage": {
            "label": "int32[]"
          },
          "t_mapping(t_uint128,t_struct(Data)41893_storage)": {
            "label": "mapping(uint128 => struct ConsensusState.Data)"
          },
          "t_uint128": {
            "label": "uint128"
          },
          "t_struct(Data)41893_storage": {
            "label": "struct ConsensusState.Data",
            "members": [
              {
                "label": "timestamp",
                "type": "t_struct(Data)45748_storage"
              },
              {
                "label": "root",
                "type": "t_bytes_storage"
              },
              {
                "label": "next_validators_hash",
                "type": "t_bytes_storage"
              }
            ]
          },
          "t_struct(Data)45748_storage": {
            "label": "struct Timestamp.Data",
            "members": [
              {
                "label": "secs",
                "type": "t_int64"
              },
              {
                "label": "nanos",
                "type": "t_int64"
              }
            ]
          },
          "t_mapping(t_uint128,t_uint256)": {
            "label": "mapping(uint128 => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "a222bf7763be1424212299cabba4012f1ad3278b799cc3fe3a3739db55d123a7": {
      "address": "0xCdf223D595E59d46a5e5a96f4A7e137780F3C4bC",
      "txHash": "0xc8819f6a963f9976a551651a1fece0a3d6e2223b029539fdeee69421189a4352",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "contract": "Routing",
            "label": "modules",
            "type": "t_mapping(t_string_memory_ptr,t_contract(IModule)6584)",
            "src": "contracts/core/26-routing/Routing.sol:20"
          },
          {
            "contract": "Routing",
            "label": "router",
            "type": "t_mapping(t_string_memory_ptr,t_struct(Rule)5073_storage)",
            "src": "contracts/core/26-routing/Routing.sol:21"
          },
          {
            "contract": "Routing",
            "label": "accessManager",
            "type": "t_contract(IAccessManager)6416",
            "src": "contracts/core/26-routing/Routing.sol:23"
          }
        ],
        "types": {
          "t_mapping(t_string_memory_ptr,t_contract(IModule)6584)": {
            "label": "mapping(string => contract IModule)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_contract(IModule)6584": {
            "label": "contract IModule"
          },
          "t_mapping(t_string_memory_ptr,t_struct(Rule)5073_storage)": {
            "label": "mapping(string => struct Routing.Rule)"
          },
          "t_struct(Rule)5073_storage": {
            "label": "struct Routing.Rule",
            "members": [
              {
                "label": "val",
                "type": "t_string_storage"
              },
              {
                "label": "isValue",
                "type": "t_bool"
              }
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_contract(IAccessManager)6416": {
            "label": "contract IAccessManager"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "c3892cae0a6837035d15671339b60e54fe3ab6c2b871ee94b43577fd335b4012": {
      "address": "0x93944052A2190e3635836bD00b22EdB655c0D9FF",
      "txHash": "0x8cdc6c337c2e9d316a2b4ff72cc300be76e27faf812ce81bcb4ee5109941337d",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "contract": "Packet",
            "label": "clientManager",
            "type": "t_contract(IClientManager)6533",
            "src": "contracts/core/04-packet/Packet.sol:23"
          },
          {
            "contract": "Packet",
            "label": "routing",
            "type": "t_contract(IRouting)6669",
            "src": "contracts/core/04-packet/Packet.sol:24"
          },
          {
            "contract": "Packet",
            "label": "sequences",
            "type": "t_mapping(t_bytes_memory_ptr,t_uint64)",
            "src": "contracts/core/04-packet/Packet.sol:26"
          },
          {
            "contract": "Packet",
            "label": "commitments",
            "type": "t_mapping(t_bytes_memory_ptr,t_bytes32)",
            "src": "contracts/core/04-packet/Packet.sol:27"
          },
          {
            "contract": "Packet",
            "label": "receipts",
            "type": "t_mapping(t_bytes_memory_ptr,t_bool)",
            "src": "contracts/core/04-packet/Packet.sol:28"
          },
          {
            "contract": "Packet",
            "label": "commitBytes",
            "type": "t_bytes_storage",
            "src": "contracts/core/04-packet/Packet.sol:29"
          }
        ],
        "types": {
          "t_contract(IClientManager)6533": {
            "label": "contract IClientManager"
          },
          "t_contract(IRouting)6669": {
            "label": "contract IRouting"
          },
          "t_mapping(t_bytes_memory_ptr,t_uint64)": {
            "label": "mapping(bytes => uint64)"
          },
          "t_bytes_storage": {
            "label": "bytes"
          },
          "t_uint64": {
            "label": "uint64"
          },
          "t_mapping(t_bytes_memory_ptr,t_bytes32)": {
            "label": "mapping(bytes => bytes32)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes_memory_ptr,t_bool)": {
            "label": "mapping(bytes => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "8c4d80b41686c977d6f8faf0c9c268e6a1e5d30b6ee7659964d61bd0c0b1338f": {
      "address": "0xB0E47f9e58105A0bd277d75C439c7CA0D2E4ea41",
      "txHash": "0xec769fa30ba523d9bc30583b0f789b30fa8f4acbe92bc1fc74521a5316863902",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "_supportedInterfaces",
            "type": "t_mapping(t_bytes4,t_bool)",
            "src": "@openzeppelin/contracts-upgradeable/introspection/ERC165Upgradeable.sol:23"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/introspection/ERC165Upgradeable.sol:59"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:27"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:30"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "_uri",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:33"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)47_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:421"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)39_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "ERC1155Bank",
            "label": "uriMap",
            "type": "t_mapping(t_uint256,t_bytes_storage)",
            "src": "contracts/core/apps/30-nft-transfer/ERC1155Bank.sol:19"
          }
        ],
        "types": {
          "t_mapping(t_uint256,t_bytes_storage)": {
            "label": "mapping(uint256 => bytes)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bytes_storage": {
            "label": "bytes"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)39_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)39_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)2855_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)2855_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)2590_storage"
              }
            ]
          },
          "t_struct(Set)2590_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]"
          },
          "t_mapping(t_bytes4,t_bool)": {
            "label": "mapping(bytes4 => bool)"
          },
          "t_bytes4": {
            "label": "bytes4"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "e0daa96812d269c08fd4026e15d9d31f535508d6e8510c5ef8ca02383a819f82": {
      "address": "0x1687045b53E6B043c27e323702eBFE873a418F2d",
      "txHash": "0x619aeda1ec5023a54d9081e88d772bbe04e6c3f88bdde5794cee17332fde4f08",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "_supportedInterfaces",
            "type": "t_mapping(t_bytes4,t_bool)",
            "src": "@openzeppelin/contracts-upgradeable/introspection/ERC165Upgradeable.sol:23"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/introspection/ERC165Upgradeable.sol:59"
          },
          {
            "contract": "ERC1155ReceiverUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155ReceiverUpgradeable.sol:24"
          },
          {
            "contract": "ERC1155HolderUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155HolderUpgradeable.sol:27"
          },
          {
            "contract": "Transfer",
            "label": "packet",
            "type": "t_contract(IPacket)6644",
            "src": "contracts/core/apps/30-nft-transfer/Transfer.sol:27"
          },
          {
            "contract": "Transfer",
            "label": "bank",
            "type": "t_contract(IERC1155Bank)6563",
            "src": "contracts/core/apps/30-nft-transfer/Transfer.sol:28"
          },
          {
            "contract": "Transfer",
            "label": "clientManager",
            "type": "t_contract(IClientManager)6533",
            "src": "contracts/core/apps/30-nft-transfer/Transfer.sol:29"
          },
          {
            "contract": "Transfer",
            "label": "traces",
            "type": "t_mapping(t_uint256,t_struct(OriginNFT)9945_storage)",
            "src": "contracts/core/apps/30-nft-transfer/Transfer.sol:31"
          }
        ],
        "types": {
          "t_contract(IPacket)6644": {
            "label": "contract IPacket"
          },
          "t_contract(IERC1155Bank)6563": {
            "label": "contract IERC1155Bank"
          },
          "t_contract(IClientManager)6533": {
            "label": "contract IClientManager"
          },
          "t_mapping(t_uint256,t_struct(OriginNFT)9945_storage)": {
            "label": "mapping(uint256 => struct TransferDataTypes.OriginNFT)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_struct(OriginNFT)9945_storage": {
            "label": "struct TransferDataTypes.OriginNFT",
            "members": [
              {
                "label": "class",
                "type": "t_string_storage"
              },
              {
                "label": "id",
                "type": "t_string_storage"
              },
              {
                "label": "uri",
                "type": "t_string_storage"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_bytes4,t_bool)": {
            "label": "mapping(bytes4 => bool)"
          },
          "t_bytes4": {
            "label": "bytes4"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          }
        }
      }
    }
  }
}
